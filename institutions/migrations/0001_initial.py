# Generated by Django 4.0.5 on 2023-06-09 06:55

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(blank=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('UTME', 'UTME'), ('DE', 'DE'), ('TRANSFER', 'TRANSFER')], max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_1', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology')], max_length=200, null=True)),
                ('course_1_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_2', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology')], max_length=200, null=True)),
                ('course_2_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_3', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology')], max_length=200, null=True)),
                ('course_3_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndexingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True)),
                ('reg_no', models.CharField(max_length=200, unique=True)),
                ('academic_session', models.CharField(blank=True, choices=[('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035')], max_length=200, null=True)),
                ('payment_status', models.IntegerField(default=1)),
                ('rrr_number', models.CharField(max_length=100)),
                ('receipt_number', models.CharField(max_length=100)),
                ('payment_amount', models.CharField(max_length=100)),
                ('payment_method', models.CharField(choices=[('Bank', 'Bank'), ('Card', 'Card')], max_length=100)),
                ('payment_receipt', models.FileField(upload_to='%Y/%m/%d/')),
                ('payment_date', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(blank=True)),
                ('course_type', models.CharField(blank=True, max_length=100)),
                ('institution_type', models.CharField(blank=True, choices=[('University', 'University'), ('College of Health', 'College of Health')], max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_no', models.CharField(blank=True, max_length=100)),
                ('accreditation_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('accreditation_date', models.DateTimeField(default=datetime.date.today)),
                ('accreditation_type', models.CharField(blank=True, choices=[('Full', 'Full'), ('Provisional', 'Provisional')], max_length=100)),
                ('address', models.TextField(blank=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True)),
                ('indexing_status', models.IntegerField(default=1)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=200, null=True)),
                ('dob', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=200, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('British Virgin Islands', 'British Virgin Islands'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cabo Verde', 'Cabo Verde'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Cayman Islands', 'Cayman Islands'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Channel Islands', 'Channel Islands'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo', 'Congo'), ('Costa Rica', 'Costa Rica'), ("Côte d'Ivoire", "Côte d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('DR Congo', 'DR Congo'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Eswatini', 'Eswatini'), ('Ethiopia', 'Ethiopia'), ('Faeroe Islands', 'Faeroe Islands'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guatemala', 'Guatemala'), ('Guemsey', 'Guemsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Holy See', 'Holy See'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macao', 'Macao'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Monstserrat', 'Monstserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('Netherlands Antilles', 'Netherlands Antilles'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('North Korea', 'North Korea'), ('North Macedonia', 'North Macedonia'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palestine', 'Palestine'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Réunion', 'Réunion'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Helena', 'Saint Helena'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome & Principe', 'Sao Tome & Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Korea', 'South Korea'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('The Bahamas', 'The Bahamas'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('United States of America', 'United States of America'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Virgin Islands', 'Virgin Islands'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=200, null=True)),
                ('state_of_origin', models.CharField(blank=True, choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Enugu', 'Enugu'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=200, null=True)),
                ('lga', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_address', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_creation_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.institutionprofile')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UtmeGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examination_body', models.CharField(blank=True, choices=[('WAEC', 'WAEC'), ('NECO', 'NECO'), ('NABTEB', 'NABTEB')], max_length=200, null=True)),
                ('course_1', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('English Language', 'English Language'), ('Mathematics', 'Mathematics')], max_length=200, null=True)),
                ('course_1_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_2', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('English Language', 'English Language'), ('Mathematics', 'Mathematics')], max_length=200, null=True)),
                ('course_2_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_3', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('English Language', 'English Language'), ('Mathematics', 'Mathematics')], max_length=200, null=True)),
                ('course_3_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_4', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('English Language', 'English Language'), ('Mathematics', 'Mathematics')], max_length=200, null=True)),
                ('course_4_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_5', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology'), ('English Language', 'English Language'), ('Mathematics', 'Mathematics')], max_length=200, null=True)),
                ('course_5_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransferGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_1', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology')], max_length=200, null=True)),
                ('course_1_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_2', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology')], max_length=200, null=True)),
                ('course_2_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('course_3', models.CharField(blank=True, choices=[('Physics', 'Physics'), ('Chemistry', 'Chemistry'), ('Biology', 'Biology')], max_length=200, null=True)),
                ('course_3_grade', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('Credit', 'Credit'), ('Pass', 'Pass'), ('Fail', 'Fail')], max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StudentIndexing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True)),
                ('reg_no', models.CharField(max_length=200, unique=True)),
                ('academic_session', models.CharField(blank=True, choices=[('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035')], max_length=200, null=True)),
                ('admission_type', models.CharField(blank=True, choices=[('UTME', 'UTME'), ('DE', 'DE'), ('TRANSFER', 'TRANSFER')], max_length=200, null=True)),
                ('indexing_status', models.IntegerField(default=2)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('de_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.degrade')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.institutionprofile')),
                ('student_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.studentprofile')),
                ('transfer_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.transfergrade')),
                ('utme_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='institutions.utmegrade')),
            ],
            options={
                'unique_together': {('student_profile', 'reg_no')},
            },
        ),
        migrations.CreateModel(
            name='StudentAdmissionRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=200)),
                ('faculty', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=200)),
                ('registration_no', models.CharField(max_length=200)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('academic_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.academicsession')),
                ('admission_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.admissiontype')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True)),
                ('academic_session', models.CharField(blank=True, choices=[('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035')], max_length=200, null=True)),
                ('payment_status', models.IntegerField(default=1)),
                ('rrr_number', models.CharField(max_length=100)),
                ('receipt_number', models.CharField(max_length=100)),
                ('payment_amount', models.CharField(max_length=100)),
                ('payment_method', models.CharField(choices=[('Bank', 'Bank'), ('Card', 'Card')], max_length=100)),
                ('payment_receipt', models.FileField(upload_to='%Y/%m/%d/')),
                ('payment_date', models.DateField(default=datetime.date.today)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.institutionprofile')),
                ('students_payments', models.ManyToManyField(to='institutions.indexingpayment')),
            ],
        ),
        migrations.AddField(
            model_name='indexingpayment',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.institutionprofile'),
        ),
        migrations.AddField(
            model_name='indexingpayment',
            name='student_indexing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.studentindexing'),
        ),
        migrations.AddField(
            model_name='indexingpayment',
            name='student_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='institutions.studentprofile'),
        ),
        migrations.AddField(
            model_name='degrade',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.studentprofile'),
        ),
        migrations.CreateModel(
            name='AdmissionQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_session', models.CharField(blank=True, choices=[('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026'), ('2026/2027', '2026/2027'), ('2027/2028', '2027/2028'), ('2028/2029', '2028/2029'), ('2029/2030', '2029/2030'), ('2030/2031', '2030/2031'), ('2031/2032', '2031/2032'), ('2032/2033', '2032/2033'), ('2033/2034', '2033/2034'), ('2034/2035', '2034/2035')], max_length=100)),
                ('course_1', models.CharField(blank=True, choices=[('Medical_Radiography', 'Medical_Radiography'), ('Medical Image Processing Technician', 'Medical Image Processing Technician')], max_length=100, null=True)),
                ('admission_quota_1', models.IntegerField(blank=True, null=True)),
                ('course_2', models.CharField(blank=True, choices=[('Medical_Radiography', 'Medical_Radiography'), ('Medical Image Processing Technician', 'Medical Image Processing Technician')], max_length=100, null=True)),
                ('admission_quota_2', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('institution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='institutions.institutionprofile')),
            ],
        ),
    ]
